{
    "openapi": "3.0.3",
    "info": {
        "title": "OData Service for namespace com.example.odata",
        "version": "1.0.0",
        "description": "This OData service is located at [http://localhost/odata](http://localhost/odata)\n\n## References\n- [Org.OData.Core.V1](https://github.com/oasis-tcs/odata-vocabularies/blob/master/vocabularies/Org.OData.Core.V1.md)\n- [Org.OData.Measures.V1](https://github.com/oasis-tcs/odata-vocabularies/blob/master/vocabularies/Org.OData.Measures.V1.md)"
    },
    "servers": [
        {
            "url": "http://localhost/odata"
        }
    ],
    "tags": [
        {
            "name": "passengers"
        },
        {
            "name": "flights"
        },
        {
            "name": "airports"
        },
        {
            "name": "pets"
        },
        {
            "name": "countries"
        }
    ],
    "paths": {
        "/passengers": {
            "get": {
                "summary": "Get entities from passengers",
                "tags": [
                    "passengers"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "name",
                                    "age",
                                    "dob",
                                    "chips",
                                    "dq",
                                    "in_role",
                                    "open_time",
                                    "flight_id",
                                    "colour",
                                    "sock_colours",
                                    "emails",
                                    "cp"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "flight",
                                    "MyPets"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "name",
                                    "name desc",
                                    "age",
                                    "age desc",
                                    "dob",
                                    "dob desc",
                                    "chips",
                                    "chips desc",
                                    "dq",
                                    "dq desc",
                                    "in_role",
                                    "in_role desc",
                                    "open_time",
                                    "open_time desc",
                                    "flight_id",
                                    "flight_id desc",
                                    "colour",
                                    "colour desc",
                                    "sock_colours",
                                    "sock_colours desc"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of passengers",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/com.example.odata.passenger"
                                            }
                                        },
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to passengers",
                "tags": [
                    "passengers"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.passenger-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.passenger"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/passengers/{id}": {
            "parameters": [
                {
                    "description": "Key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    }
                }
            ],
            "get": {
                "summary": "Get entity from passengers by key",
                "tags": [
                    "passengers"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "name",
                                    "age",
                                    "dob",
                                    "chips",
                                    "dq",
                                    "in_role",
                                    "open_time",
                                    "flight_id",
                                    "colour",
                                    "sock_colours",
                                    "emails",
                                    "cp"
                                ]
                            }
                        }
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "flight",
                                    "MyPets"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.passenger"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in passengers",
                "tags": [
                    "passengers"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.passenger-update"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.passenger"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from passengers",
                "tags": [
                    "passengers"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/passengers/{id}/flight": {
            "parameters": [
                {
                    "description": "Key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    }
                }
            ],
            "get": {
                "summary": "Get entities from related flights",
                "tags": [
                    "passengers"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "origin",
                                    "destination",
                                    "gate",
                                    "duration"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "airports",
                                    "originAirport",
                                    "destinationAirport",
                                    "passengers"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "origin",
                                    "origin desc",
                                    "destination",
                                    "destination desc",
                                    "gate",
                                    "gate desc",
                                    "duration",
                                    "duration desc"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of flights",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/com.example.odata.flight"
                                            }
                                        },
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to related flights",
                "tags": [
                    "flights",
                    "passengers"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.flight-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.flight"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/passengers/{id}/MyPets": {
            "summary": "All my pets",
            "parameters": [
                {
                    "description": "Key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    }
                }
            ],
            "get": {
                "summary": "Get entities from related pets",
                "tags": [
                    "passengers"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "name",
                                    "type",
                                    "passenger_id"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "name",
                                    "name desc",
                                    "type",
                                    "type desc",
                                    "passenger_id",
                                    "passenger_id desc"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of pets",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/com.example.odata.pet"
                                            }
                                        },
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to related pets",
                "tags": [
                    "pets",
                    "passengers"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.pet-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.pet"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/flights": {
            "get": {
                "summary": "Get entities from flights",
                "tags": [
                    "flights"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "origin",
                                    "destination",
                                    "gate",
                                    "duration"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "airports",
                                    "originAirport",
                                    "destinationAirport",
                                    "passengers"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "origin",
                                    "origin desc",
                                    "destination",
                                    "destination desc",
                                    "gate",
                                    "gate desc",
                                    "duration",
                                    "duration desc"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of flights",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/com.example.odata.flight"
                                            }
                                        },
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to flights",
                "tags": [
                    "flights"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.flight-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.flight"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/flights/{id}": {
            "parameters": [
                {
                    "description": "Key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    }
                }
            ],
            "get": {
                "summary": "Get entity from flights by key",
                "tags": [
                    "flights"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "origin",
                                    "destination",
                                    "gate",
                                    "duration"
                                ]
                            }
                        }
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "airports",
                                    "originAirport",
                                    "destinationAirport",
                                    "passengers"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.flight"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in flights",
                "tags": [
                    "flights"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.flight-update"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.flight"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from flights",
                "tags": [
                    "flights"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/flights/{id}/airports": {
            "parameters": [
                {
                    "description": "Key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    }
                }
            ],
            "get": {
                "summary": "Get entities from related airports",
                "tags": [
                    "flights"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "name",
                                    "code",
                                    "construction_date",
                                    "open_time",
                                    "sam_datetime",
                                    "review_score",
                                    "is_big",
                                    "country_id"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "country",
                                    "flights"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "name",
                                    "name desc",
                                    "code",
                                    "code desc",
                                    "construction_date",
                                    "construction_date desc",
                                    "open_time",
                                    "open_time desc",
                                    "sam_datetime",
                                    "sam_datetime desc",
                                    "review_score",
                                    "review_score desc",
                                    "is_big",
                                    "is_big desc",
                                    "country_id",
                                    "country_id desc"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of airports",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/com.example.odata.airport"
                                            }
                                        },
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to related airports",
                "tags": [
                    "airports",
                    "flights"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.airport-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.airport"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/flights/{id}/originAirport": {
            "parameters": [
                {
                    "description": "Key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    }
                }
            ],
            "get": {
                "summary": "Get entities from related airports",
                "tags": [
                    "flights"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "name",
                                    "code",
                                    "construction_date",
                                    "open_time",
                                    "sam_datetime",
                                    "review_score",
                                    "is_big",
                                    "country_id"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "country",
                                    "flights"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "name",
                                    "name desc",
                                    "code",
                                    "code desc",
                                    "construction_date",
                                    "construction_date desc",
                                    "open_time",
                                    "open_time desc",
                                    "sam_datetime",
                                    "sam_datetime desc",
                                    "review_score",
                                    "review_score desc",
                                    "is_big",
                                    "is_big desc",
                                    "country_id",
                                    "country_id desc"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of airports",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/com.example.odata.airport"
                                            }
                                        },
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to related airports",
                "tags": [
                    "airports",
                    "flights"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.airport-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.airport"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/flights/{id}/destinationAirport": {
            "parameters": [
                {
                    "description": "Key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    }
                }
            ],
            "get": {
                "summary": "Get entities from related airports",
                "tags": [
                    "flights"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "name",
                                    "code",
                                    "construction_date",
                                    "open_time",
                                    "sam_datetime",
                                    "review_score",
                                    "is_big",
                                    "country_id"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "country",
                                    "flights"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "name",
                                    "name desc",
                                    "code",
                                    "code desc",
                                    "construction_date",
                                    "construction_date desc",
                                    "open_time",
                                    "open_time desc",
                                    "sam_datetime",
                                    "sam_datetime desc",
                                    "review_score",
                                    "review_score desc",
                                    "is_big",
                                    "is_big desc",
                                    "country_id",
                                    "country_id desc"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of airports",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/com.example.odata.airport"
                                            }
                                        },
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to related airports",
                "tags": [
                    "airports",
                    "flights"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.airport-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.airport"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/flights/{id}/passengers": {
            "parameters": [
                {
                    "description": "Key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    }
                }
            ],
            "get": {
                "summary": "Get entities from related passengers",
                "tags": [
                    "flights"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "name",
                                    "age",
                                    "dob",
                                    "chips",
                                    "dq",
                                    "in_role",
                                    "open_time",
                                    "flight_id",
                                    "colour",
                                    "sock_colours",
                                    "emails",
                                    "cp"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "flight",
                                    "MyPets"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "name",
                                    "name desc",
                                    "age",
                                    "age desc",
                                    "dob",
                                    "dob desc",
                                    "chips",
                                    "chips desc",
                                    "dq",
                                    "dq desc",
                                    "in_role",
                                    "in_role desc",
                                    "open_time",
                                    "open_time desc",
                                    "flight_id",
                                    "flight_id desc",
                                    "colour",
                                    "colour desc",
                                    "sock_colours",
                                    "sock_colours desc"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of passengers",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/com.example.odata.passenger"
                                            }
                                        },
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to related passengers",
                "tags": [
                    "passengers",
                    "flights"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.passenger-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.passenger"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/airports": {
            "get": {
                "summary": "Get entities from airports",
                "tags": [
                    "airports"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "name",
                                    "code",
                                    "construction_date",
                                    "open_time",
                                    "sam_datetime",
                                    "review_score",
                                    "is_big",
                                    "country_id"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "country",
                                    "flights"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "name",
                                    "name desc",
                                    "code",
                                    "code desc",
                                    "construction_date",
                                    "construction_date desc",
                                    "open_time",
                                    "open_time desc",
                                    "sam_datetime",
                                    "sam_datetime desc",
                                    "review_score",
                                    "review_score desc",
                                    "is_big",
                                    "is_big desc",
                                    "country_id",
                                    "country_id desc"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of airports",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/com.example.odata.airport"
                                            }
                                        },
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to airports",
                "tags": [
                    "airports"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.airport-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.airport"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/airports/{id}": {
            "parameters": [
                {
                    "description": "Key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    }
                }
            ],
            "get": {
                "summary": "Get entity from airports by key",
                "tags": [
                    "airports"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "name",
                                    "code",
                                    "construction_date",
                                    "open_time",
                                    "sam_datetime",
                                    "review_score",
                                    "is_big",
                                    "country_id"
                                ]
                            }
                        }
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "country",
                                    "flights"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.airport"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in airports",
                "tags": [
                    "airports"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.airport-update"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.airport"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from airports",
                "tags": [
                    "airports"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/airports/{id}/country": {
            "parameters": [
                {
                    "description": "Key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    }
                }
            ],
            "get": {
                "summary": "Get entities from related countries",
                "tags": [
                    "airports"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "name"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "name",
                                    "name desc"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of countries",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/com.example.odata.country"
                                            }
                                        },
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to related countries",
                "tags": [
                    "countries",
                    "airports"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.country-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.country"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/airports/{id}/flights": {
            "parameters": [
                {
                    "description": "Key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    }
                }
            ],
            "get": {
                "summary": "Get entities from related flights",
                "tags": [
                    "airports"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "origin",
                                    "destination",
                                    "gate",
                                    "duration"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "expand",
                        "in": "query",
                        "description": "Expand related entities, see [OData Expand](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "airports",
                                    "originAirport",
                                    "destinationAirport",
                                    "passengers"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "origin",
                                    "origin desc",
                                    "destination",
                                    "destination desc",
                                    "gate",
                                    "gate desc",
                                    "duration",
                                    "duration desc"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of flights",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/com.example.odata.flight"
                                            }
                                        },
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to related flights",
                "tags": [
                    "flights",
                    "airports"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.flight-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.flight"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/pets": {
            "get": {
                "summary": "Get entities from pets",
                "tags": [
                    "pets"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "name",
                                    "type",
                                    "passenger_id"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "name",
                                    "name desc",
                                    "type",
                                    "type desc",
                                    "passenger_id",
                                    "passenger_id desc"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of pets",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/com.example.odata.pet"
                                            }
                                        },
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to pets",
                "tags": [
                    "pets"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.pet-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.pet"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/pets/{id}": {
            "parameters": [
                {
                    "description": "Key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    }
                }
            ],
            "get": {
                "summary": "Get entity from pets by key",
                "tags": [
                    "pets"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "name",
                                    "type",
                                    "passenger_id"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.pet"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in pets",
                "tags": [
                    "pets"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.pet-update"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.pet"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from pets",
                "tags": [
                    "pets"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/countries": {
            "get": {
                "summary": "Get entities from countries",
                "tags": [
                    "countries"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "name"
                                ]
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "name": "orderby",
                        "in": "query",
                        "description": "Order items by property values, see [OData Sorting](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "id desc",
                                    "name",
                                    "name desc"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of countries",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/com.example.odata.country"
                                            }
                                        },
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to countries",
                "tags": [
                    "countries"
                ],
                "requestBody": {
                    "required": true,
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.country-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.country"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/countries/{id}": {
            "parameters": [
                {
                    "description": "Key: id",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    }
                }
            ],
            "get": {
                "summary": "Get entity from countries by key",
                "tags": [
                    "countries"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "in": "query",
                        "description": "Select properties to be returned, see [OData Select](https://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "id",
                                    "name"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.country"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in countries",
                "tags": [
                    "countries"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/com.example.odata.country-update"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/com.example.odata.country"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from countries",
                "tags": [
                    "countries"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/$batch": {
            "post": {
                "summary": "Send a group of requests",
                "operationId": "batch",
                "description": "Group multiple requests into a single request payload, see [Batch requests](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests)",
                "tags": [
                    "Batch requests"
                ],
                "requestBody": {
                    "required": true,
                    "description": "Batch request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "requests": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "method": {
                                                    "type": "string",
                                                    "enum": [
                                                        "get",
                                                        "post",
                                                        "patch",
                                                        "put",
                                                        "delete"
                                                    ]
                                                },
                                                "url": {
                                                    "type": "string"
                                                },
                                                "headers": {
                                                    "type": "object"
                                                },
                                                "body": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "requests": [
                                    {
                                        "id": "0",
                                        "method": "get",
                                        "url": "/odata/resource(1)"
                                    },
                                    {
                                        "id": "1",
                                        "method": "patch",
                                        "url": "/odata/resource(2)",
                                        "headers": {
                                            "Prefer": "return=minimal"
                                        },
                                        "body": "<JSON representation of changes to entity>"
                                    }
                                ]
                            }
                        },
                        "multipart/mixed;boundary=request-separator": {
                            "schema": {
                                "type": "string"
                            },
                            "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET odata/resource HTTP/1.1\nAccept: application/json\n\n\n-request-separator--"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Batch response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "responses": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "integer"
                                                    },
                                                    "body": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "responses": [
                                        {
                                            "id": "0",
                                            "status": 200,
                                            "body": "<JSON representation of the entity with key 1>"
                                        },
                                        {
                                            "id": "1",
                                            "status": 204
                                        }
                                    ]
                                }
                            },
                            "multipart/mixed": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "com.example.odata.passenger": {
                "type": "object",
                "title": "passenger",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    },
                    "name": {
                        "type": "string",
                        "nullable": false,
                        "maxLength": 255
                    },
                    "age": {
                        "anyOf": [
                            {
                                "type": "number",
                                "format": "double",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "-INF",
                                    "INF",
                                    "NaN"
                                ],
                                "nullable": true
                            }
                        ]
                    },
                    "dob": {
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "nullable": true
                    },
                    "chips": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "dq": {
                        "type": "string",
                        "format": "date",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                        "nullable": true
                    },
                    "in_role": {
                        "type": "string",
                        "format": "duration",
                        "pattern": "^(-?)P(?=\\d|T\\d)(\\d+Y)?(\\d+M)?(\\d+[DW])?(T(\\d+H)?(\\d+M)?((\\d+(\\.\\d+)?)S)?)?$",
                        "nullable": true
                    },
                    "open_time": {
                        "type": "string",
                        "format": "time",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                        "nullable": true
                    },
                    "flight_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": -9223372036854775808,
                        "maximum": 9223372036854775807,
                        "nullable": true
                    },
                    "colour": {
                        "type": "string",
                        "enum": [
                            "Red",
                            "Green",
                            "Blue",
                            "Brown"
                        ],
                        "nullable": true
                    },
                    "sock_colours": {
                        "type": "string",
                        "enum": [
                            "Red",
                            "Green",
                            "Blue",
                            "Brown"
                        ],
                        "nullable": true
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "cp": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    }
                }
            },
            "com.example.odata.passenger-create": {
                "type": "object",
                "title": "passenger (Create schema)",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": false,
                        "maxLength": 255
                    },
                    "age": {
                        "anyOf": [
                            {
                                "type": "number",
                                "format": "double",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "-INF",
                                    "INF",
                                    "NaN"
                                ],
                                "nullable": true
                            }
                        ]
                    },
                    "dob": {
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "nullable": true
                    },
                    "chips": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "dq": {
                        "type": "string",
                        "format": "date",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                        "nullable": true
                    },
                    "in_role": {
                        "type": "string",
                        "format": "duration",
                        "pattern": "^(-?)P(?=\\d|T\\d)(\\d+Y)?(\\d+M)?(\\d+[DW])?(T(\\d+H)?(\\d+M)?((\\d+(\\.\\d+)?)S)?)?$",
                        "nullable": true
                    },
                    "open_time": {
                        "type": "string",
                        "format": "time",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                        "nullable": true
                    },
                    "flight_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": -9223372036854775808,
                        "maximum": 9223372036854775807,
                        "nullable": true
                    },
                    "colour": {
                        "type": "string",
                        "enum": [
                            "Red",
                            "Green",
                            "Blue",
                            "Brown"
                        ],
                        "nullable": true
                    },
                    "sock_colours": {
                        "type": "string",
                        "enum": [
                            "Red",
                            "Green",
                            "Blue",
                            "Brown"
                        ],
                        "nullable": true
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                }
            },
            "com.example.odata.passenger-update": {
                "type": "object",
                "title": "passenger (Update schema)",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": false,
                        "maxLength": 255
                    },
                    "age": {
                        "anyOf": [
                            {
                                "type": "number",
                                "format": "double",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "-INF",
                                    "INF",
                                    "NaN"
                                ],
                                "nullable": true
                            }
                        ]
                    },
                    "dob": {
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "nullable": true
                    },
                    "chips": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "dq": {
                        "type": "string",
                        "format": "date",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                        "nullable": true
                    },
                    "in_role": {
                        "type": "string",
                        "format": "duration",
                        "pattern": "^(-?)P(?=\\d|T\\d)(\\d+Y)?(\\d+M)?(\\d+[DW])?(T(\\d+H)?(\\d+M)?((\\d+(\\.\\d+)?)S)?)?$",
                        "nullable": true
                    },
                    "open_time": {
                        "type": "string",
                        "format": "time",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                        "nullable": true
                    },
                    "flight_id": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": -9223372036854775808,
                        "maximum": 9223372036854775807,
                        "nullable": true
                    },
                    "colour": {
                        "type": "string",
                        "enum": [
                            "Red",
                            "Green",
                            "Blue",
                            "Brown"
                        ],
                        "nullable": true
                    },
                    "sock_colours": {
                        "type": "string",
                        "enum": [
                            "Red",
                            "Green",
                            "Blue",
                            "Brown"
                        ],
                        "nullable": true
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                }
            },
            "com.example.odata.flight": {
                "type": "object",
                "title": "flight",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    },
                    "origin": {
                        "type": "string",
                        "nullable": true
                    },
                    "destination": {
                        "type": "string",
                        "nullable": true
                    },
                    "gate": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    },
                    "duration": {
                        "type": "string",
                        "format": "duration",
                        "pattern": "^(-?)P(?=\\d|T\\d)(\\d+Y)?(\\d+M)?(\\d+[DW])?(T(\\d+H)?(\\d+M)?((\\d+(\\.\\d+)?)S)?)?$",
                        "nullable": true
                    }
                }
            },
            "com.example.odata.flight-create": {
                "type": "object",
                "title": "flight (Create schema)",
                "properties": {
                    "origin": {
                        "type": "string",
                        "nullable": true
                    },
                    "destination": {
                        "type": "string",
                        "nullable": true
                    },
                    "gate": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    },
                    "duration": {
                        "type": "string",
                        "format": "duration",
                        "pattern": "^(-?)P(?=\\d|T\\d)(\\d+Y)?(\\d+M)?(\\d+[DW])?(T(\\d+H)?(\\d+M)?((\\d+(\\.\\d+)?)S)?)?$",
                        "nullable": true
                    }
                }
            },
            "com.example.odata.flight-update": {
                "type": "object",
                "title": "flight (Update schema)",
                "properties": {
                    "origin": {
                        "type": "string",
                        "nullable": true
                    },
                    "destination": {
                        "type": "string",
                        "nullable": true
                    },
                    "gate": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    },
                    "duration": {
                        "type": "string",
                        "format": "duration",
                        "pattern": "^(-?)P(?=\\d|T\\d)(\\d+Y)?(\\d+M)?(\\d+[DW])?(T(\\d+H)?(\\d+M)?((\\d+(\\.\\d+)?)S)?)?$",
                        "nullable": true
                    }
                }
            },
            "com.example.odata.airport": {
                "type": "object",
                "title": "airport",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    },
                    "name": {
                        "type": "string",
                        "nullable": false
                    },
                    "code": {
                        "type": "string",
                        "nullable": false
                    },
                    "construction_date": {
                        "type": "string",
                        "format": "date",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                        "nullable": true
                    },
                    "open_time": {
                        "type": "string",
                        "format": "time",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                        "nullable": true
                    },
                    "sam_datetime": {
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "nullable": true
                    },
                    "review_score": {
                        "anyOf": [
                            {
                                "type": "number",
                                "format": "decimal",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "-INF",
                                    "INF",
                                    "NaN"
                                ],
                                "nullable": true
                            }
                        ]
                    },
                    "is_big": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "country_id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    }
                }
            },
            "com.example.odata.airport-create": {
                "type": "object",
                "title": "airport (Create schema)",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": false
                    },
                    "code": {
                        "type": "string",
                        "nullable": false
                    },
                    "construction_date": {
                        "type": "string",
                        "format": "date",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                        "nullable": true
                    },
                    "open_time": {
                        "type": "string",
                        "format": "time",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                        "nullable": true
                    },
                    "sam_datetime": {
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "nullable": true
                    },
                    "review_score": {
                        "anyOf": [
                            {
                                "type": "number",
                                "format": "decimal",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "-INF",
                                    "INF",
                                    "NaN"
                                ],
                                "nullable": true
                            }
                        ]
                    },
                    "is_big": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "country_id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    }
                }
            },
            "com.example.odata.airport-update": {
                "type": "object",
                "title": "airport (Update schema)",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": false
                    },
                    "code": {
                        "type": "string",
                        "nullable": false
                    },
                    "construction_date": {
                        "type": "string",
                        "format": "date",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                        "nullable": true
                    },
                    "open_time": {
                        "type": "string",
                        "format": "time",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                        "nullable": true
                    },
                    "sam_datetime": {
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "nullable": true
                    },
                    "review_score": {
                        "anyOf": [
                            {
                                "type": "number",
                                "format": "decimal",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "-INF",
                                    "INF",
                                    "NaN"
                                ],
                                "nullable": true
                            }
                        ]
                    },
                    "is_big": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "country_id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    }
                }
            },
            "com.example.odata.pet": {
                "type": "object",
                "title": "pet",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "passenger_id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    }
                }
            },
            "com.example.odata.pet-create": {
                "type": "object",
                "title": "pet (Create schema)",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "passenger_id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    }
                }
            },
            "com.example.odata.pet-update": {
                "type": "object",
                "title": "pet (Update schema)",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "passenger_id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    }
                }
            },
            "com.example.odata.country": {
                "type": "object",
                "title": "country",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": false
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "com.example.odata.country-create": {
                "type": "object",
                "title": "country (Create schema)",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "com.example.odata.country-update": {
                "type": "object",
                "title": "country (Update schema)",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Edm.ComplexType": {
                "type": "object"
            },
            "Edm.EntityType": {
                "type": "object"
            },
            "Edm.PrimitiveType": {
                "anyOf": [
                    {
                        "type": "boolean"
                    },
                    {
                        "type": "string"
                    },
                    {
                        "type": "number"
                    }
                ]
            },
            "Edm.AnnotationPath": {
                "type": "string"
            },
            "Edm.NavigationPropertyPath": {
                "type": "string"
            },
            "Edm.PropertyPath": {
                "type": "string"
            },
            "Edm.Binary": {
                "type": "string",
                "format": "base64url",
                "pattern": "^([A-Za-z0-9_-]{4})*([A-Za-z0-9_-]{3}[A-Za-z0-9_-]|[A-Za-z0-9_-]{2}[AEIMQUYcgkosw048]=?|[A-Za-z0-9_-][AQgw](==)?)?$"
            },
            "Edm.Byte": {
                "type": "integer",
                "format": "uint8",
                "minimum": 0,
                "maximum": 255
            },
            "Edm.Date": {
                "type": "string",
                "format": "date",
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
            },
            "Edm.DateTimeOffset": {
                "type": "string",
                "format": "date-time",
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$"
            },
            "Edm.Double": {
                "anyOf": [
                    {
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "type": "string",
                        "enum": [
                            "-INF",
                            "INF",
                            "NaN"
                        ]
                    }
                ]
            },
            "Edm.Duration": {
                "type": "string",
                "format": "duration",
                "pattern": "^(-?)P(?=\\d|T\\d)(\\d+Y)?(\\d+M)?(\\d+[DW])?(T(\\d+H)?(\\d+M)?((\\d+(\\.\\d+)?)S)?)?$"
            },
            "Edm.Guid": {
                "type": "string",
                "format": "uuid",
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
            },
            "Edm.Int16": {
                "type": "integer",
                "format": "int16",
                "minimum": -32768,
                "maximum": 32767
            },
            "Edm.Int32": {
                "type": "integer",
                "format": "int32",
                "minimum": -2147483648,
                "maximum": 2147483647
            },
            "Edm.Int64": {
                "type": "integer",
                "format": "int64",
                "minimum": -9223372036854775808,
                "maximum": 9223372036854775807
            },
            "Edm.String": {
                "type": "string"
            },
            "Edm.Boolean": {
                "type": "boolean"
            },
            "Edm.SByte": {
                "type": "integer",
                "format": "int8",
                "minimum": -128,
                "maximum": 127
            },
            "Edm.Single": {
                "anyOf": [
                    {
                        "type": "number",
                        "format": "single"
                    },
                    {
                        "type": "string",
                        "enum": [
                            "-INF",
                            "INF",
                            "NaN"
                        ]
                    }
                ]
            },
            "Edm.Decimal": {
                "anyOf": [
                    {
                        "type": "number",
                        "format": "decimal"
                    },
                    {
                        "type": "string",
                        "enum": [
                            "-INF",
                            "INF",
                            "NaN"
                        ]
                    }
                ]
            },
            "Edm.Stream": {
                "type": "string",
                "format": "base64url"
            },
            "Edm.TimeOfDay": {
                "type": "string",
                "format": "time",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$"
            },
            "Edm.Untyped": {
                "type": "object",
                "additionalProperties": true
            },
            "com.example.odata.UInt16": {
                "type": "integer",
                "format": "int16",
                "minimum": 0,
                "maximum": 32767
            },
            "com.example.odata.UInt32": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "maximum": 2147483647
            },
            "com.example.odata.UInt64": {
                "type": "integer",
                "format": "int64",
                "minimum": 0,
                "maximum": 9223372036854775807
            },
            "count": {
                "anyOf": [
                    {
                        "type": "integer",
                        "minimum": 0
                    },
                    {
                        "type": "string"
                    }
                ],
                "title": "Count (parameter)",
                "description": "The number of entities in the collection. Available when using the [$count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option"
            }
        },
        "responses": {
            "error": {
                "description": "Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "target": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "innererror": {
                                            "type": "object",
                                            "description": "The structure of this object is service-specific"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "parameters": {
            "top": {
                "name": "top",
                "schema": {
                    "type": "integer",
                    "minimum": 0
                },
                "in": "query",
                "description": "Show only the first n items, see [OData Paging \u2013 Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)"
            },
            "skip": {
                "name": "skip",
                "schema": {
                    "type": "integer",
                    "minimum": 0
                },
                "in": "query",
                "description": "Skip the first n items, see [OData Paging - Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)"
            },
            "skiptoken": {
                "name": "skiptoken",
                "schema": {
                    "type": "string"
                },
                "in": "query",
                "description": "Skip using a skip token, see [OData Server Driven Paging](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_ServerDrivenPaging)"
            },
            "count": {
                "name": "count",
                "schema": {
                    "type": "boolean"
                },
                "in": "query",
                "description": "Include count of items, see [OData Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)"
            },
            "filter": {
                "name": "filter",
                "schema": {
                    "type": "string"
                },
                "in": "query",
                "description": "Filter items by property values, see [OData Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)"
            },
            "search": {
                "name": "search",
                "schema": {
                    "type": "string"
                },
                "in": "query",
                "description": "Search items by search phrases, see [OData Searching](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)"
            }
        }
    }
}
